[{"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\App.js":"1","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Header\\index.js":"2","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\services\\api.js":"3","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\pages\\Evolution\\index.js":"4","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\index.js":"5","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Select\\index.js":"6","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\index.js":"7","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\WellsChart\\index.js":"8","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\HexChart\\index.js":"9","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\CegonhaChart\\index.js":"10","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\RullerChart\\index.js":"11","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\LegerChart\\index.js":"12","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\HorizontalChart\\index.js":"13","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\AbsChart\\index.js":"14","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\FsktChart\\index.js":"15","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Sidebar\\index.js":"16","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Navbar\\index.js":"17"},{"size":364,"mtime":1609163788489,"results":"18","hashOfConfig":"19"},{"size":259,"mtime":1606591708967,"results":"20","hashOfConfig":"19"},{"size":117,"mtime":1606677096851,"results":"21","hashOfConfig":"19"},{"size":4826,"mtime":1609155678005,"results":"22","hashOfConfig":"19"},{"size":162,"mtime":1606158961639,"results":"23","hashOfConfig":"19"},{"size":1164,"mtime":1607780829654,"results":"24","hashOfConfig":"19"},{"size":2243,"mtime":1609154615820,"results":"25","hashOfConfig":"19"},{"size":3254,"mtime":1609154841613,"results":"26","hashOfConfig":"19"},{"size":3191,"mtime":1608718998749,"results":"27","hashOfConfig":"19"},{"size":3195,"mtime":1609154957985,"results":"28","hashOfConfig":"19"},{"size":3187,"mtime":1608718998753,"results":"29","hashOfConfig":"19"},{"size":3192,"mtime":1608718998753,"results":"30","hashOfConfig":"19"},{"size":3216,"mtime":1608718664109,"results":"31","hashOfConfig":"19"},{"size":3212,"mtime":1608718998749,"results":"32","hashOfConfig":"19"},{"size":3205,"mtime":1608718998749,"results":"33","hashOfConfig":"19"},{"size":2309,"mtime":1609163750433,"results":"34","hashOfConfig":"19"},{"size":954,"mtime":1609164042533,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"l978n4",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\App.js",["73"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Header\\index.js",[],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\services\\api.js",[],["74","75"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\pages\\Evolution\\index.js",[],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\index.js",[],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Select\\index.js",[],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\index.js",[],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\WellsChart\\index.js",["76"],"import React, {Component} from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, Cell, LabelList } from 'recharts';\r\n\r\nclass WellsChart extends Component {\r\n\r\n    mostraValores(data) {\r\n\r\n        const { valores } = data;\r\n        const radius = 10;\r\n\r\n        return (\r\n            <g>\r\n                <text fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"middle\">\r\n                    {valores}\r\n                </text>\r\n            </g>\r\n        );\r\n    };\r\n\r\n    geraBarra(score) {\r\n        if(score === 1) {\r\n            return \"#d41002\";\r\n        } else if (score === 2) {\r\n            return \"#d48402\";\r\n        } else if (score === 3) {\r\n            return \"#d4bb02\";\r\n        } else if (score === 4) {\r\n            return \"#089c19\";\r\n        }\r\n        return \"#3944bc\";\r\n    }\r\n\r\n    geraGrafico() {\r\n        let values = this.props.values;\r\n        console.log(values);\r\n        if(this.props.values.length < 1) {\r\n            return (\r\n                <h2 id=\"msg-sem-grafico\">Não há gáficos para esta consulta</h2>\r\n            );\r\n        } \r\n        let data = [];\r\n        for(let i in values) {\r\n            data[i] = {\r\n                \"avaliacaoID\": values[i].avaliacaoID, \r\n                \"dataAvaliacao\": values[i].dataAvaliacao,\r\n                \"valores\" : values[i].valores,\r\n                \"score\": values[i].score,\r\n            }\r\n        }\r\n        return (\r\n            <BarChart width={900} height={380} data={data} margin={{top: 20, right: 5, left: 20, bottom: 5 }}>\r\n                <XAxis height={68} dataKey=\"dataAvaliacao\"  angle={-45} textAnchor=\"end\" />\r\n                <YAxis label=\"cm\" type=\"number\" domain={[0, 'dataMax + 10']}/>\r\n                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" margin={{right: 30}}\r\n                    payload={\r\n                        [\r\n                            { id: 'ruim',        value: 'Ruim',            type: 'circle', color: '#d41002'},\r\n                            { id: 'abaixoMedia', value: 'Abaixo da Média', type: 'circle', color: '#d48402'},\r\n                            { id: 'media',       value: 'Média',           type: 'circle', color: '#d4bb02'},\r\n                            { id: 'acimaMedia',  value: 'Acima da Média',  type: 'circle', color: '#089c19'},\r\n                            { id: 'Excelente',   value: 'Excelente',       type: 'circle', color: '#3944bc'},\r\n                        ]\r\n                    }\r\n                />\r\n                <Bar dataKey=\"valores\"  label={{ position: 'top' }}>\r\n                    <LabelList position=\"top\"/>\r\n                    {\r\n                        data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={this.geraBarra(data[index].score)} strokeWidth={index === 2 ? 4 : 1}  Label datakey={data[index].valores} />\r\n                        ))\r\n                    }\r\n                </Bar>\r\n            </BarChart>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wellsChart\">\r\n                 {this.geraGrafico()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WellsChart;\r\n\r\n/**\r\n * #d41002 - red\r\n * #d48402 - orange\r\n * #d4bb02 - yellow\r\n * #089c19 - green\r\n * #3944bc - blue\r\n */","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\HexChart\\index.js",["77"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\CegonhaChart\\index.js",["78"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\RullerChart\\index.js",["79"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\LegerChart\\index.js",["80"],"import React, {Component} from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, Legend, Cell, LabelList } from 'recharts';\r\n\r\nclass LegerChart extends Component {\r\n    mostraValores(data) {\r\n\r\n        const { valores } = data;\r\n        const radius = 10;\r\n\r\n        return (\r\n            <g>\r\n                <text fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"middle\">\r\n                    {valores}\r\n                </text>\r\n            </g>\r\n        );\r\n    };\r\n\r\n    geraBarra(score) {\r\n        if(score === 1) {\r\n            return \"#d41002\";\r\n        } else if (score === 2) {\r\n            return \"#d48402\";\r\n        } else if (score === 3) {\r\n            return \"#d4bb02\";\r\n        } else if (score === 4) {\r\n            return \"#089c19\";\r\n        }\r\n        return \"#3944bc\";\r\n    }\r\n\r\n    geraGrafico() {\r\n        let values = this.props.values;\r\n        console.log(values);\r\n        if(this.props.values.length < 1) {\r\n            return (\r\n                <h2 id=\"msg-sem-grafico\">Não há gáficos para esta consulta</h2>\r\n            );\r\n        } \r\n        let data = [];\r\n        for(let i in values) {\r\n            data[i] = {\r\n                \"avaliacaoID\": values[i].avaliacaoID, \r\n                \"dataAvaliacao\": values[i].dataAvaliacao,\r\n                \"valores\" : values[i].valores,\r\n                \"score\": values[i].score,\r\n            }\r\n        }\r\n        return (\r\n            <BarChart width={1000} height={400} data={data} margin={{top: 20, right: 5, left: 20, bottom: 5 }}>\r\n                <XAxis height={100} dataKey=\"dataAvaliacao\"  angle={-45} textAnchor=\"end\" />\r\n                <YAxis label={{ value: 'segundos', angle: -90, position: 'left' }} type=\"number\" domain={[0, 'dataMax + 20']}/>\r\n                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" margin={{right: 30}}\r\n                    payload={\r\n                        [\r\n                            { id: 'ruim',        value: 'Ruim',            type: 'circle', color: '#d41002'},\r\n                            { id: 'abaixoMedia', value: 'Abaixo da Média', type: 'circle', color: '#d48402'},\r\n                            { id: 'media',       value: 'Média',           type: 'circle', color: '#d4bb02'},\r\n                            { id: 'acimaMedia',  value: 'Acima da Média',  type: 'circle', color: '#089c19'},\r\n                            { id: 'Excelente',   value: 'Excelente',       type: 'circle', color: '#3944bc'},\r\n                        ]\r\n                    }\r\n                />\r\n                <Bar dataKey=\"valores\"  label={{ position: 'top' }}>\r\n                    <LabelList position=\"top\"/>\r\n                    {\r\n                        data.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={this.geraBarra(data[index].score)} strokeWidth={index === 2 ? 4 : 1}  Label datakey={data[index].valores} />\r\n                        ))\r\n                    }\r\n                </Bar>\r\n            </BarChart>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Leger-chart\">\r\n                {this.geraGrafico()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LegerChart;","C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\HorizontalChart\\index.js",["81"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\AbsChart\\index.js",["82"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Chart\\FsktChart\\index.js",["83"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Sidebar\\index.js",["84","85","86","87","88","89"],"C:\\Users\\DenerThiago\\Google Drive\\tcc-tkd\\TCC2\\AITest\\frontend\\src\\components\\Navbar\\index.js",["90","91"],{"ruleId":"92","severity":1,"message":"93","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":26},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":9,"column":15,"nodeType":"94","messageId":"95","endLine":9,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":10,"column":15,"nodeType":"94","messageId":"95","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":8,"column":15,"nodeType":"94","messageId":"95","endLine":8,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":12,"column":29,"nodeType":"103","endLine":12,"endColumn":67},{"ruleId":"101","severity":1,"message":"102","line":18,"column":29,"nodeType":"103","endLine":18,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":24,"column":29,"nodeType":"103","endLine":24,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":30,"column":29,"nodeType":"103","endLine":30,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":36,"column":29,"nodeType":"103","endLine":36,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":42,"column":29,"nodeType":"103","endLine":42,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":8,"column":17,"nodeType":"103","endLine":8,"endColumn":82},{"ruleId":"101","severity":1,"message":"102","line":14,"column":25,"nodeType":"103","endLine":14,"endColumn":58},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'radius' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]